name: Archive CS Packs

on:
  workflow_dispatch:

jobs:
  archive:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get date and commit hash
        run: |
          echo "FULL_SHA=$GITHUB_SHA" >> $GITHUB_ENV
          TODAY=$(date +"%B-%d-%Y" | tr '[:upper:]' '[:lower:]')
          echo "MAIN_ARTIFACT_NAME=blue_archive_mod_pack_${TODAY}" >> $GITHUB_ENV
          echo "GDD_ARTIFACT_NAME=gamers_only_pack_${TODAY}" >> $GITHUB_ENV

      - name: Create ReadMe file
        run: |
          echo "Commit: $FULL_SHA" > "[ReadMe] Place everything inside mods folder.txt"
          echo "" >> "[ReadMe] Place everything inside mods folder.txt"
          echo "Move everything to the mods folder and enable the mods:" >> "[ReadMe] Place everything inside mods folder.txt"
          echo "-> Blue Archive Main (Required)" >> "[ReadMe] Place everything inside mods folder.txt"
          echo "-> Packs of your choice" >> "[ReadMe] Place everything inside mods folder.txt"

      - name: Move folders and readme to temporary folder
        run: |
          mkdir mod_archive
          mkdir gdd_archive
          cp "[CS] BlueArchiveMain" mod_archive/
          cp "[CS] BlueArchiveMain" gdd_archive/
          mv "[CS] BlueArchiveVol1[Abydos-Gehenna-Highlander]" mod_archive/
          mv "[CS] BlueArchiveVol2[Millennium]" mod_archive/
          mv "[CS] BlueArchiveVol3[Trinity-Arius]" mod_archive/
          mv "[CS] BlueArchiveVol4[SRT-Valkyrie-WildHunt-ETC]" mod_archive/
          mv "[CS] BlueArchiveVol5[Hyakkiyako-Shanhaijing-RW]" mod_archive/
          mv "[CS] BlueArchivePack[GDD]" gdd_archive/
          cp "[ReadMe] Place everything inside mods folder.txt" mod_archive/
          cp "[ReadMe] Place everything inside mods folder.txt" gdd_archive/

      - name: Upload main artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MAIN_ARTIFACT_NAME }}
          path: mod_archive
          compression-level: 9

      - name: Upload GDD artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GDD_ARTIFACT_NAME }}
          path: gdd_archive
          compression-level: 9